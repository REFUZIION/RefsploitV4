local Manager = game:GetService("VirtualInputManager")

local Folder5 = Instance.new("Folder", game.Workspace)
Folder5.Name = "Folder5"

local CanLoad
for i, v in pairs(game.Workspace.Properties:GetChildren()) do
    v.Owner.Changed:connect(function(Val)
        if Val == game:GetService("Players").LocalPlayer then
            repeat
                wait()
            until game.Players.LocalPlayer.leaderstats.Money.Value ~= 20         
            CanLoad = false
            wait(60)
            CanLoad = true
        end
    end)
end

local function Loading()
local String = Instance.new("StringValue", Folder5)
end

local function Load(Save)
    if game.Players.LocalPlayer.CurrentSaveSlot.Value ~= -1 then
        Loading()
        game.ReplicatedStorage.LoadSaveRequests.RequestLoad:InvokeServer(Save)
    end
end

local function Send()
    if game.Players.LocalPlayer.CurrentSaveSlot.Value ~= -1 and game.Players.LocalPlayer.leaderstats.Money.Value ~= 20 and game.Players.LocalPlayer.leaderstats.Money.Value ~= 0 then
        local Str = Instance.new("NumberValue", Folder5)
    end
end

local function Save()
    if game.Players.LocalPlayer.CurrentSaveSlot.Value ~= -1 and game.Players.LocalPlayer.leaderstats.Money.Value ~= 20 and game.Players.LocalPlayer.leaderstats.Money.Value ~= 0 then
        local Str = Instance.new("BoolValue", Folder5)
    end
end


local MoneyBack = false
local SlotNumber
Folder5.ChildAdded:connect(function(child)
if child:IsA("StringValue") then
game:GetService("Players").LocalPlayer.PlayerGui.Chat.Frame.Visible = false
repeat
    wait(0.1)
until game:GetService("Players").LocalPlayer.PlayerGui.PropertyPurchasingGUI.SelectPurchase.Visible == true
wait(1.2)
Manager:SendKeyEvent(true,"E",false,game)
repeat
    wait(0.1)
until game:GetService("Players").LocalPlayer.PlayerGui.PropertyPurchasingGUI.ConfirmPurchase.Visible == true
wait(1.2)
Manager:SendKeyEvent(true,"E",false,game)
wait(2.5)
game:GetService("Players").LocalPlayer.PlayerGui.Chat.Frame.Visible = true
if game:GetService("Players").LocalPlayer.PlayerGui.PropertyPurchasingGUI.ConfirmPurchase.Visible == true then
game:GetService("Players").LocalPlayer.Character.Humanoid.Health = 0
wait(7)
Load(SlotNumber)
end
elseif child:IsA("NumberValue") then
MoneyBack = false
game.ReplicatedStorage.Transactions.ClientToServer.Donate:InvokeServer(game.Players.LocalPlayer, game.Players.LocalPlayer.leaderstats.Money.Value, 1)
MoneyBack = true
elseif child:IsA("BoolValue") then
game.ReplicatedStorage.LoadSaveRequests.RequestSave:InvokeServer(SlotNumber)
end
end)

function MoneyDupe(Times)
for i = 1, Times do
SlotNumber = game.Players.LocalPlayer.CurrentSaveSlot.Value
wait(30)
repeat
Send()
wait(2.5)
until game.Players.LocalPlayer.leaderstats.Money.Value == 0
if CanLoad ~= nil then
repeat
wait(0.1)
until CanLoad == true
else
wait(27.5)
end
Load(SlotNumber)
repeat
wait(0.1)
until MoneyBack == true
Save()
if i ~= Times then
repeat
Send()
wait(2.5)
until game.Players.LocalPlayer.leaderstats.Money.Value == 0
end
end
end

MoneyDupe(1)